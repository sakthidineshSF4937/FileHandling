._ts file
export default class TemplateComponent extends Vue {
templateIds = [];
templateLength=this.templateIds.length;

}
Merge template dropdown.vue file
<template>
 <ejs-dropdownbutton v-if="!showConfirmDialog"
    class="bs-template-merge"
    id="merge_button"
    :items="mergeOptions"
    :content="mergeAndUse"
    :open="setPopoverPosition"
    @select="mergeOptionsSelect"
  ></ejs-dropdownbutton>  
  <div v-else class="overlay">
  <div class="e-control e-dialog e-lib confirm-delete-template-dialog e-dlg-modal e-popup e-popup-open centered-dialog" role="dialog" style="max-height: 348px; z-index: 2147483647; width: 470px;" aria-describedby="_dialog-content" aria-modal="true" tabindex="-1" >
    <div class="e-dlg-content" id="_dialog-content">
      <div class="dialog-header" style="display: flex;justify-content: space-between;">
        <div class="warning-gradient-bg"></div>
        <div class="text-content-style">
        <div>{{data.customPermission.dialogConfirmText }}</div> 
        <div>{{ data.customPermission.dialogConfirmSubText }}</div>
        </div>
      </div>
      <div class="dialog-footer">
        <button type="button" class="e-control e-btn e-lib e-flat" v-on:click="onCancelDelete">{{ data.customPermission.dialogCancel }}</button>
        <button type="button" class="e-control e-btn e-lib e-danger e-flat" v-on:click="onConfirmDelete">{{ data.customPermission.dialogConfirm }}</button>
      </div>
    </div>
  </div>
  </div>
</template>

<script lang="ts">
import { Component, Prop, Vue } from "vue-property-decorator";
import ConfirmDeleteDialog from "../webhooks/confirm-delete-dialog.vue";
import dailogtext from "../../../ClientApp/locales/en.json";
// import * as v from "../../../ClientApp/pages/templates/_";

@Component
({
  components:{
    ConfirmDeleteDialog
  }
})
@Component
export default class MergeTemplateDropDown extends Vue {
  data=dailogtext;
//  templateLength=v.default.prototype.templateLength;
//  templateLength=templateLength;
showConfirmDialog:boolean = false;
  mergeOptions = [
    { text: 'Create document', id: 'mergeDoc' },
    { text: 'Create bulk link', id: 'mergeLink' },
    {text:'Delete',id:'mergedelete'}
  ];

  mergeAndUse = 'Merge & Use';

  mergeOptionsSelect (args) {
    if (args.item.id === 'mergeDoc') {
      this.$nuxt.$emit('mergeTemplate', 'document');
    }
    else if(args.item.id ==='mergedelete'){
      this.showConfirmDialog=true;
      console.log('mergedelete')
      // this.$nuxt.$emit('deleteTemplate', 'document');
    }
    else {
      this.$nuxt.$emit('mergeTemplate', 'bulklink');
    }
  }
  onConfirmDelete(){
    console.log("confirmed delete");
    this.$nuxt.$emit('deleteTemplate', 'document');
    alert("template deleted successfully")
    this.showConfirmDialog=false;
  }
  onCancelDelete(){
    console.log("canceled delete");
    this.showConfirmDialog=false;
    
  }
  setPopoverPosition () {
    const dropdown = document.querySelector('#merge_button') as HTMLElement;
    const popover = document.querySelector('#merge_button-popup') as HTMLElement;
    if (dropdown && popover) {
      popover.style.left = dropdown.getBoundingClientRect().left + "px";
    }
  }
}
</script>

<style>
#merge_button {
  border: solid 1px #0F43B3;
  color: #ffffff;
  padding: 4px 12px;
  background-color: #0565ff;
  border-radius: 4px;
  width: 148px;
  height: 32px;
}
.overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100%;
  background-color: rgba(45, 55, 72, 0.4);
  opacity: 1;
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 2147483647; /* Ensure it's above other content */
} 

.dialog-box {
 max-width: 470px; /* Same width as specified for the dialog */
}
.centered-dialog {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  padding: 20px;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  background-color: #fff;
  border-radius: 8px;
}

.dialog-header {
  margin-bottom: 20px;
  text-align: center;
}

.dialog-footer {
  display: flex;
  justify-content: space-between;
  padding-top: 10px;
}
 /* .overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(45, 55, 72, 0.4);
  opacity: 1;
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 2147483647; /* Ensure it's above other content */
/* }  */ 
#merge_button:hover {
  background-color: #2e7eff;
}

.bs-template-merge:before {
  content: '\e3b4';
  font-family: Bold Sign;
  vertical-align: middle;
  font-weight: 500;
  padding-right: 10px;
}

#merge_button span.e-btn-icon.e-icons.e-icon-right.e-caret {
  display: inline-block;
  font-weight: 500;
  color: #ffffff;
  margin: 0;
  padding-left: 7px;
}

#merge_button-popup ul {
  min-width: 148px;
}
</style>

background-color: rgba(45, 55, 72, 0.4);
opacity: 1;

